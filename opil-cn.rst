****
OPIL 规范
****




数据定义
=======

定义::

    /**
    * 数据类型
    */
    export enum DataType {
        /**
        * 空
        */
        NULL = 0x00,
        /**
        * 字符串
        */
        STR = 0x01,
        /**
        * 整数
        */
        INT = 0x02,
        /**
        * 长整数
        */
        LONG = 0x03,
        /**
        * 浮点数
        */
        FLOAT = 0x04,
        /**
        * 真
        */
        TRUE = 0x05,
        /**
        * 假
        */
        FALSE = 0x06
    }

    /**
    * 运算符
    */
    export enum Operator {
        /**
        * 相加
        */
        Add = 0x01,
        /**
        * 相减
        */
        Sub = 0x02,
        /**
        * 相乘
        */
        Mul = 0x03,
        /**
        * 相除
        */
        Div = 0x04,
        /**
        * 取模
        */
        Mod = 0x05,
        /**
        * 取负
        */
        Neg = 0x06,
        /**
        * 取正
        */
        Pos = 0x07,
        /**
        * 逻辑等于
        */
        Eq = 0x08,
        /**
        * 逻辑不等于
        */
        Ne = 0x09,
        /**
        * 逻辑大于
        */
        Gt = 0x0A,
        /**
        * 逻辑大于等于
        */
        Ge = 0x0B,
        /**
        * 逻辑小于
        */
        Lt = 0x0C,
        /**
        * 逻辑小于等于
        */
        Le = 0x0D,
        //Leg = 0x014,
        /**
        * 逻辑与
        */
        And = 0x0E,
        /**
        * 逻辑或
        */
        Or = 0x0F

    }

    /**
    * 字符编码
    */
    enum Encodings{
        UTF8 = 0x00,
        ASCII = 0x01
    }



Doc
===
结构::
    头结束地址：4字节

    源文件地址：字符串（字符串字节长度4位+字节组）

Nop
===

表示一个占位，不执行具体操作，结构::

    地址:4字节
    类型:1字节=0x02

Break
===

表示一个中断，不执行具体操作，结构::

    地址:4字节
    类型:1字节=0x03
    源代码行号：4字节
    中断类型：1字节
        0x01: EXIT 退出当前流
        0x02: NEVER 始终跳转到指定地址
        0x03: TRUE 从栈顶弹出一个元素，值为真则跳转到指定地址
        0x04: FALSE 从栈顶弹出一个元素，值为假则跳转到指定地址
    目标地址：4字节，如中断类型为0x00则没有该地址

LoadConst
===

表示载入一个常量到栈顶，结构::

    地址:4字节
    类型:1字节=0x04
    源代码行号：4字节
    值类型：1字节
    值：根据类型决定

LoadVariable
===

表示载入一个变量到栈顶，结构::

    地址:4字节
    类型:1字节=0x05
    源代码行号：4字节
    变量名:字符串

SetVariable
===

从栈顶获取一个值并设置到指定变量，结构::

    地址:4字节
    类型:1字节=0x06
    源代码行号：4字节
    变量名:字符串

Call
===
调用一个函数
从栈顶获取一个元素字符串（函数名）或方法(如js的闭名，java的method)
如果是方法则从栈顶获取调用方法的实例对象
根据参数个数获取参数，执行并将结果存入栈顶
结构::

    地址:4字节
    类型:1字节=0x07
    源代码行号：4字节
    参数个数:int


Print
=====

从栈顶弹出一个元素并打印到输出流，结构::

    地址:4字节
    类型:1字节=0x08
    源代码行号：4字节
    是否编码：bool


Operation
=========
根据运算类型从栈顶弹出相应元素并将结果存入栈顶，结构::

    地址:4字节
    类型:1字节=0x09
    源代码行号：4字节
    运算符类型：1字节


LoadMember
==========
表示载入一个对象成员到栈顶
从栈顶弹出对象实例对象
从栈顶弹出参数组
结构::

    地址:4字节
    类型:1字节=0x0A
    源代码行号：4字节
    参数个数:字符串

Scope
=====
表示开启或关闭一个变量范围
结构::

    地址:4字节
    类型:1字节=0x0B
    模式:1字节，boolean

Block
=====
声明一个块。
块结束时有一个break.EXIT,解释到这里时退出块的执行
结构::

    地址:4字节
    类型:1字节=0x0C 
    源代码行号：4字节
    块名:str


BlockCall
=====
调用一个块。
在调用块的时候将会使用一个新的scope
结构::

    地址:4字节
    类型:1字节=0x0D 
    源代码行号：4字节
    块名:str
    参数个数：int

Reference
=====
引用另一个资源。
结构::

    地址:4字节
    类型:1字节=0x0E
    源代码行号：4字节
    类型:1字节
        0x01: INCLUDE 包含，如果另一个存在则调用
        0x02: REQUIRE 资源必须存在，并且只调用其头定义，不执行主体
        0x03: LAYOUT 做为一个布局文件存在
    资源地址：str


CastToIterator
==============
从栈顶弹出一个元素转换成迭代后再存入栈顶。
结构::

    地址:4字节
    类型:1字节=0x0F
    源代码行号：4字节